$date
	Sun Jun 08 20:08:51 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module RegfileTb $end
$var wire 32 ! read_data2 [31:0] $end
$var wire 32 " read_data1 [31:0] $end
$var reg 1 # RegWrite $end
$var reg 1 $ clk $end
$var reg 5 % rd [4:0] $end
$var reg 5 & rs1 [4:0] $end
$var reg 5 ' rs2 [4:0] $end
$var reg 32 ( write_data [31:0] $end
$scope module uut $end
$var wire 1 # RegWrite $end
$var wire 1 $ clk $end
$var wire 5 ) rd [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rs2 [4:0] $end
$var wire 32 , write_data [31:0] $end
$var wire 32 - read_data2 [31:0] $end
$var wire 32 . read_data1 [31:0] $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
0$
0#
b0 "
b0 !
$end
#5000
1$
1#
b101010 (
b101010 ,
b101 %
b101 )
#10000
0$
#15000
1$
0#
#20000
b101010 "
b101010 .
0$
b101 &
b101 *
#25000
1$
#30000
0$
1#
b1100011 (
b1100011 ,
b0 %
b0 )
#35000
1$
#40000
0$
0#
#45000
b101010 !
b101010 -
b0 "
b0 .
1$
b101 '
b101 +
b0 &
b0 *
#50000
0$
#55000
1$
#60000
0$
